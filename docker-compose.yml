version: '3.9'

services:
  hospital-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hospital-api
    ports:
      - '3000:3000'
    environment:
      - PORT=3000
      - PG_HOST=hospital-postgres
      - PG_PORT=5432
      - PG_USER=postgres
      - PG_PASSWORD=@40300912
      - PG_DATABASE=wegHospital
      - PG_SYNC=true
      - PG_LOGGING=true
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-wegHospital}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-wegHospital}@localhost:6379
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET:-access_token}
      - JWT_ACCESS_TOKEN_EXPIRATION=${JWT_ACCESS_TOKEN_EXPIRATION:-15m}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET:-refresh_token}
      - JWT_REFRESH_TOKEN_EXPIRATION=${JWT_REFRESH_TOKEN_EXPIRATION:-7d}
      - THROTTLE_TTL=${THROTTLE_TTL:-6000}
      - THROTTLE_LIMIT=${THROTTLE_LIMIT:-10}
    depends_on:
       hospital-postgres:
        condition: service_started
       redis-cache:
        condition: service_started
    networks:
      - app-network
    volumes:
      - ./applogs:/app/applogs

  hospital-postgres:
    image: postgres:15-alpine
    container_name: hospital-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: '@40300912'
      POSTGRES_DB: wegHospital
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-cache:
    image: redis:8.0-alpine
    container_name: redis-cache
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-wegHospital}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-wegHospital}"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD:-wegHospital} ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  pgdata:
    name: wegHospital_db_data
    driver: local
  redis_data:
    name: wegHospital_redis_data
    driver: local

networks:
  app-network:
    driver: bridge